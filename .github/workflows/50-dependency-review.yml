name: 50-Dependency-Review
on:
# dependency scan works comparing pull requests to the base branch
  pull_request_target:
    # These types are all required for CRDA to scan pull requests correctly and securely.
    types: [ opened, synchronize, reopened, labeled, edited ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'

permissions:
  contents: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Show the two contexts
        run: |
          echo "ctxt: ${{ github.sha }} pr: ${{ github.event.pull_request.head.sha }}"
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          ref: ${{  github.event.pull_request.head.sha }} # This is dangerous without the first access check
      - run: echo "${{ github.event_name }}"
      # Use the dependency snapshot to detect transient dependencies
      # https://github.com/actions/dependency-review-action/issues/595#event-10791333872
      - name: Submit Dependency Snapshot
        uses: advanced-security/maven-dependency-submission-action@v3
        with:
          directory: ${{ github.workspace }}/todo
          
      - name: 'Dependency Review from PR'
        uses: actions/dependency-review-action@v3
